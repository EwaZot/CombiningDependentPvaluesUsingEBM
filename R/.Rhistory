source("EmpericalBrownsMethod/R/ebm.R")
options(digits=16)
# Test with artificical data
print("****************************************************************")
print("RANDOM DATA")
randData <- read.table("../Data/RandomData.tsv", sep="\t", header=F, stringsAsFactors=F)
a <- as.numeric(randData[1,-1])
rd <- randData[-1,-1]
pvals <- sapply(1:10, function(i) cor.test(a, as.numeric(rd[i,]))$p.value)
print(empiricalBrownsMethod(data_matrix=rd, p_values=pvals, extra_info=T))
print("****************************************************************")
source("EmpericalBrownsMethod/R/ebm.R")
source("/EmpericalBrownsMethod/R/ebm.R")
source("EmpiricalBrownsMethod/R/ebm.R")
options(digits=16)
print("****************************************************************")
print("RANDOM DATA")
randData <- read.table("../Data/RandomData.tsv", sep="\t", header=F, stringsAsFactors=F)
a <- as.numeric(randData[1,-1])
rd <- randData[-1,-1]
pvals <- sapply(1:10, function(i) cor.test(a, as.numeric(rd[i,]))$p.value)
print(empiricalBrownsMethod(data_matrix=rd, p_values=pvals, extra_info=T))
print("****************************************************************")
print(KostsMethod(data_matrix=rd, p_values=pvals, extra_info=T))
print("****************************************************************")
print(kostsMethod(data_matrix=rd, p_values=pvals, extra_info=T))
print("****************************************************************")
print(kostsMethod(data_matrix=as.matrix(rd), p_values=pvals, extra_info=T))
print("****************************************************************")
pathways <- read.table("../Data/pathways.tsv", sep="\t", header=T, stringsAsFactors=F)
allPvals <- read.table("../Data/CDH4_Pvalues.tsv", sep="\t", stringsAsFactors=F, header=T )
dat <- read.table("../Data/ReducedFeatureMatrix.tsv", sep="\t", stringsAsFactors=F, header=F)
allPvals <- (unique(allPvals))
print("Glypican 3 Network")
glypGenes <- pathways$gene[pathways$pathway == "GLYPICAN 3 NETWORK"]
glypPvals <- allPvals$pvalue.with.CHD4[allPvals$gene %in% glypGenes]
glypDat <- dat[dat$V1 %in% glypGenes, 2:ncol(dat)]
print(empiricalBrownsMethod(data_matrix=glypDat, p_values=glypPvals, extra_info=T))
print("****************************************************************")
print(kostsMethod(data_matrix=glypDat, p_values=glypPvals, extra_info=T))
print("****************************************************************")
print(kostsMethod(data_matrix=as.matrix(glypDat), p_values=glypPvals, extra_info=T))
print("****************************************************************")
